Description: spapr/pci: populate PCI DT in reverse order
Note: can be droppyed >=2.9 as it is in queue for that qemu version

    commit a8eeafda1930f49e2080e66b7a5ef493564838d1
    Author: Greg Kurz <gkurz@linux.vnet.ibm.com>
    Date:   Wed Feb 22 11:56:53 2017 +0100

    spapr/pci: populate PCI DT in reverse order

    Since commit 1d2d974244c6 "spapr_pci: enumerate and add PCI device tree", QEMU
    populates the PCI device tree in the opposite order compared to SLOF.

    Before 1d2d974244c6:

    Populating /pci@800000020000000
                         00 0000 (D) : 1af4 1000    virtio [ net ]
                         00 0800 (D) : 1af4 1001    virtio [ block ]
                         00 1000 (D) : 1af4 1009    virtio [ network ]
    Populating /pci@800000020000000/unknown-legacy-device@2

    7e5294b8 :  /pci@800000020000000
    7e52b998 :  |-- ethernet@0
    7e52c0c8 :  |-- scsi@1
    7e52c7e8 :  +-- unknown-legacy-device@2 ok

    Since 1d2d974244c6:

    Populating /pci@800000020000000
                         00 1000 (D) : 1af4 1009    virtio [ network ]
    Populating /pci@800000020000000/unknown-legacy-device@2
                         00 0800 (D) : 1af4 1001    virtio [ block ]
                         00 0000 (D) : 1af4 1000    virtio [ net ]

    7e5e8118 :  /pci@800000020000000
    7e5ea6a0 :  |-- unknown-legacy-device@2
    7e5eadb8 :  |-- scsi@1
    7e5eb4d8 :  +-- ethernet@0 ok

    This behaviour change is not actually a bug since no assumptions should be
    made on DT ordering. But it has no real justification either, other than
    being the consequence of the way fdt_add_subnode() inserts new elements
    to the front of the FDT rather than adding them to the tail.

    This patch reverts to the historical SLOF ordering by walking PCI devices
    in reverse order. This reconciles pseries with x86 machine types behavior.
    It is expected to make things easier when porting existing applications to
    power.

    Signed-off-by: Greg Kurz <gkurz@linux.vnet.ibm.com>
    Tested-by: Thomas Huth <thuth@redhat.com>
    Reviewed-by: Nikunj A Dadhania <nikunj@linux.vnet.ibm.com>
    (slight update to the changelog)
    Signed-off-by: Greg Kurz <groug@kaod.org>
    Signed-off-by: David Gibson <david@gibson.dropbear.id.au>

Original-Author: Greg Kurz <groug@kaod.org>
Author: Christian Ehrhardt <christian.ehrhardt@canonical.com>
Bug-Ubuntu: https://bugs.launchpad.net/ubuntu/+source/qemu/+bug/1670481
Forwarded: upstream (a8eeafda1930f49e2080e66b7a5ef493564838d1)
--- a/hw/pci/pci.c
+++ b/hw/pci/pci.c
@@ -1527,6 +1527,34 @@
     { 0, NULL}
 };
 
+static void pci_for_each_device_under_bus_reverse(PCIBus *bus,
+                                                  void (*fn)(PCIBus *b,
+                                                             PCIDevice *d,
+                                                             void *opaque),
+                                                  void *opaque)
+{
+    PCIDevice *d;
+    int devfn;
+
+    for (devfn = 0; devfn < ARRAY_SIZE(bus->devices); devfn++) {
+        d = bus->devices[ARRAY_SIZE(bus->devices) - 1 - devfn];
+        if (d) {
+            fn(bus, d, opaque);
+        }
+    }
+}
+
+void pci_for_each_device_reverse(PCIBus *bus, int bus_num,
+                         void (*fn)(PCIBus *b, PCIDevice *d, void *opaque),
+                         void *opaque)
+{
+    bus = pci_find_bus_nr(bus, bus_num);
+
+    if (bus) {
+        pci_for_each_device_under_bus_reverse(bus, fn, opaque);
+    }
+}
+
 static void pci_for_each_device_under_bus(PCIBus *bus,
                                           void (*fn)(PCIBus *b, PCIDevice *d,
                                                      void *opaque),
--- a/hw/ppc/spapr_pci.c
+++ b/hw/ppc/spapr_pci.c
@@ -1782,9 +1782,9 @@
     s_fdt.fdt = p->fdt;
     s_fdt.node_off = offset;
     s_fdt.sphb = p->sphb;
-    pci_for_each_device(sec_bus, pci_bus_num(sec_bus),
-                        spapr_populate_pci_devices_dt,
-                        &s_fdt);
+    pci_for_each_device_reverse(sec_bus, pci_bus_num(sec_bus),
+                                spapr_populate_pci_devices_dt,
+                                &s_fdt);
 }
 
 static void spapr_phb_pci_enumerate_bridge(PCIBus *bus, PCIDevice *pdev,
@@ -1953,9 +1953,9 @@
     s_fdt.fdt = fdt;
     s_fdt.node_off = bus_off;
     s_fdt.sphb = phb;
-    pci_for_each_device(bus, pci_bus_num(bus),
-                        spapr_populate_pci_devices_dt,
-                        &s_fdt);
+    pci_for_each_device_reverse(bus, pci_bus_num(bus),
+                                spapr_populate_pci_devices_dt,
+                                &s_fdt);
 
     ret = spapr_drc_populate_dt(fdt, bus_off, OBJECT(phb),
                                 SPAPR_DR_CONNECTOR_TYPE_PCI);
--- a/include/hw/pci/pci.h
+++ b/include/hw/pci/pci.h
@@ -427,6 +427,10 @@
 void pci_for_each_device(PCIBus *bus, int bus_num,
                          void (*fn)(PCIBus *bus, PCIDevice *d, void *opaque),
                          void *opaque);
+void pci_for_each_device_reverse(PCIBus *bus, int bus_num,
+                                 void (*fn)(PCIBus *bus, PCIDevice *d,
+                                            void *opaque),
+                                 void *opaque);
 void pci_for_each_bus_depth_first(PCIBus *bus,
                                   void *(*begin)(PCIBus *bus, void *parent_state),
                                   void (*end)(PCIBus *bus, void *state),
